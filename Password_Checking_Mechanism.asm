ORG 000H
  SJMP START
  ORG 0030H
START:
  MOV P0,#0FFH
  MOV R1,#00H
  ACALL LCD_INITIALIZE
K1:
  MOV P1,#0
  MOV A,P0
  ANL A,#00000011B
  CJNE A,#00000011B,K1
K2:
  ACALL DELAY
  MOV A,P0
  ANL A,#000000011B
  CJNE A,#000000011B,OVER
  SJMP K2
OVER:
  ACALL DELAY
  MOV A,P0
  ANL A,#000000011B
  CJNE A,#000000011B,OVER1
  SJMP K2
OVER1:
  MOV ROW P1,#11111110B
  MOV A,PO
  ANL A,#00000011B
  CJNE A,#00000011B,ROW_0;
  MOV P1,#11111101B
  MOV A,PO
  ANL A,#00000011B
  CJNE A,#00000011B,ROW 1
  LJMP K2
ROW_0: 
  MOV DPTR, #KCODEO
  SJMP FIND
ROW_1: 
  MOV DPTR, #KCODE1 
FIND:
  RRC A
  JNC MATCH
  INC DPTR
  SJMP FIND
MATCH:
  CJNE R1,#00H,MATCH2
  CLR A
  MOVC A,@A+DPTR
  CJNE A,#'0',ER
  ACALL LCD_DATA
  INC R1
  LJMP K1
MATCH1:
  CJNE R1,#01H,MATCH2
  CLR A
  MOVC A,@A+DPTR
  CJNE A,#'0',ER
  ACALL LCD_DATA
  INC R1
  LJMP K1
MATCH2:
  CJNE R1,#02H,MATCH3
  CLR A
  MOVC A,@A+DPTR
  CJNE A,#'0',ER
  ACALL LCD_DATA
  INC R1
  LJMP K1
MATCH3:
  CLR A
  MOVC A,@A+DPTR
  CJNE A,#'0',ER
  ACALL LCD_DATA
  LJMP SU
SU:
  MOV A,#01H
  ACALL LCD_COMMAND
  MOV DPTR,#SUCCESS_MESSAGE
  LJMP SUCCESS
ER:
  MOV A,#01H
  ACALL LCD_COMMAND
  MOV DPTR,#ERROR_MESSAGE
  LJMP ERROR
LCD_INITIALIZE:
  MOV A,#38H
  ACALL LCD_COMMAND
  MOV A,#0EH
  ACALL LCD_COMMAND
  MOV A,#01H
  ACALL LCD_COMMAND
  MOV A,#06H
  ACALL LCD_COMMAND
  MOV A,#0C0H
  ACALL LCD_COMMAND
  RET
LCD_COMMAND:
  MOV P2,A
  SETB P3.5
  CLR P3.6
  CLR P3.7
  ACALL DELAY
  CLR P3.5
  RET
LCD_DATA:
  CJNE A,#'0',ER
  MOV P2,A
  SETB P3.7
  CLR P3.6
  SETB P3.5
  ACALL DELAY
  CLR P3.5
  RET
DELAY:
  MOV R4,#40
  REPEAT:
    MOV R5,#230
    REPEATT:
      DJNZ R5,REPEATT
    DJNZ R4,REPEAT
RET

  
